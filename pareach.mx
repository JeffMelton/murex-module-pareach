#!/usr/bin/env murex

# pareach: Minimal viable Murex parallel foreach module
# Usage: pareach <varname> '{ <block> }'
# Example:
# ja %[1..3] -> set array
# pareach $array '{ 1 + {1} }'
#
# In the example above, `{1} is the current element of the array.
# The block is executed in parallel for each element.

function pareach {
    which murex -> format csv -> set murex_path

    # Here we split the input array into space-separated values
    out @PARAMS[0] -> jsplit " " -> set arr

    # This captures the function body passed in from stdin
    out @PARAMS[1..] -> set fn

    # `-r` is the rust-parallel flag for regex - we'll capture the entire item passed in from `@arr`.
    # `-s` is the rust-parallel flag for shell execution, defaulting to Bash
    # `--shell-path` is the rust-parallel flag for specifying the shell path - we set this to the local path for Murex
    rust-parallel -r '(.*)' -s --shell-path $murex_path "$fn" ::: @arr
}
